<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:KanBan.Utils">
    <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
    <Style TargetType="{x:Type Button}" x:Key="OverrideButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style des boutons du menu ouvrant -->
    <Style TargetType="{x:Type Button}" x:Key="MenuButtonStyle" BasedOn="{StaticResource OverrideButtonStyle}">
        <Setter Property="Border.Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style des boutons du menu glissant -->
    <Style TargetType="{x:Type Button}" x:Key="ReverseMenuButtonStyle" BasedOn="{StaticResource OverrideButtonStyle}">
        <Setter Property="Border.Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- This style is used for the ProjectListMenu -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ProjectListMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Border.Background" Value="Transparent"/>
        <Setter Property="TextBlock.Background" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Border.Background" Value="Transparent"/>
                <Setter Property="TextBlock.Background" Value="Purple"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxHorizontal">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Border.Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Border.Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>