<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:KanBan.Utils"
                    xmlns:models="clr-namespace:KanBan.Models">
    <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
    <Style TargetType="{x:Type Button}" x:Key="OverrideButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style des boutons du menu ouvrant -->
    <Style TargetType="{x:Type Button}" x:Key="MenuButtonStyle" BasedOn="{StaticResource OverrideButtonStyle}">
        <Setter Property="Border.Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style des boutons du menu glissant -->
    <Style TargetType="{x:Type Button}" x:Key="ReverseMenuButtonStyle" BasedOn="{StaticResource OverrideButtonStyle}">
        <Setter Property="Border.Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- This style is used for the ProjectListMenu -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ProjectListMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Border.Background" Value="Transparent"/>
        <Setter Property="TextBlock.Background" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Border.Background" Value="Transparent"/>
                <Setter Property="TextBlock.Background" Value="Purple"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxHorizontal">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Border.Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Border.Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate DataType="{x:Type models:TaskModel}" x:Key="TaskTemplate">
        <Grid Margin="5" Background="Green">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Name}"/>
            <TextBlock Text="{Binding DeadLine}" Grid.Row="1"/>
            <TextBlock Text="{Binding Description}" Grid.Row="2"/>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:ColumnModel}" x:Key="ColumnTemplate">
        <Grid Background="Yellow" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Height="50">
                <TextBlock Text="{Binding Name}" Height="Auto" TextAlignment="Center" VerticalAlignment="Center" FontSize="20" TextWrapping="WrapWithOverflow"/>
            </Border>
            <ListBox ItemsSource="{Binding TasksCollection}" ItemTemplate="{StaticResource TaskTemplate}" Grid.Row="1" Width="300" Background="Transparent">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border>
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:ProjectModel}" x:Key="ProjectTemplate">
        <Grid Background="Blue">
            <ListBox ItemsSource="{Binding ColumnCollection}" Background="Purple" Margin="0" ItemTemplate="{StaticResource ColumnTemplate}" Style="{StaticResource ListBoxHorizontal}" 
                         ScrollViewer.CanContentScroll="False"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>